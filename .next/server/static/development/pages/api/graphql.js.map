{"version":3,"file":"static\\development\\pages\\api\\graphql.js","sources":["webpack:///webpack/bootstrap","webpack:///./apollo/resolvers.js","webpack:///./apollo/schema.js","webpack:///./apollo/type-defs.js","webpack:///./pages/api/graphql.js","webpack:///external \"apollo-link-http\"","webpack:///external \"apollo-server-micro\"","webpack:///external \"graphql-tag\"","webpack:///external \"graphql-tools\"","webpack:///external \"node-fetch\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","// Hold all endpoints data here\nimport { createHttpLink } from \"apollo-link-http\";\nimport fetch from \"node-fetch\";\nconst GITHUB_BASE_API = \"https://api.github.com\";\n\nexport const resolvers = {\n  Query: {\n    viewer(_parent, _args, _context, _info) {\n      return { id: 1, name: \"John Smith 2\", status: \"\" };\n    },\n    git_user: async (parent, args, context, info) => {\n      let { id } = args;\n\n      return fetch(`${GITHUB_BASE_API}/users/${id}`)\n        .then(res => res.json())\n        .then(git_data => {\n          if (git_data.id) {\n            return {\n              id: git_data.id,\n              name: git_data.login,\n              html_url: git_data.html_url,\n              status: \"wip\"\n            };\n          } else {\n            console.error(\"git_data => \", git_data);\n            return {\n              id: 404,\n              name: git_data.message,\n              html_url: git_data.documentation_url,\n              status: git_data.message\n            };\n          }\n        })\n        .catch(err => {\n          console.log(\"err => \", JSON.stringify(err));\n          return {\n            id: 404,\n            name: err.message,\n            html_url: \"\",\n            status: err.message\n          };\n        });\n    }\n  }\n};\n","import { makeExecutableSchema } from 'graphql-tools'\nimport { typeDefs } from './type-defs'\nimport { resolvers } from './resolvers'\n\nexport const schema = makeExecutableSchema({\n  typeDefs,\n  resolvers,\n})\n","import gql from \"graphql-tag\";\n\nexport const typeDefs = gql`\n  type User {\n    id: ID!\n    name: String!\n    status: String!\n  }\n\n  type GithubUser {\n    id: ID!\n    name: String!\n    html_url: String!\n    status: String!\n  }\n\n  type Query {\n    viewer: User\n    git_user(id: ID!): GithubUser\n  }\n`;\n","import { ApolloServer } from \"apollo-server-micro\";\nimport { schema } from \"../../apollo/schema\";\n\nconst apolloServer = new ApolloServer({ schema });\n\nexport const config = {\n  api: {\n    bodyParser: false\n  }\n};\n\nexport default apolloServer.createHandler({ path: \"/api/graphql\" });\n","module.exports = require(\"apollo-link-http\");","module.exports = require(\"apollo-server-micro\");","module.exports = require(\"graphql-tag\");","module.exports = require(\"graphql-tools\");","module.exports = require(\"node-fetch\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AApCA;AADA;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAFA;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AADA;AADA;AAMA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACXA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}