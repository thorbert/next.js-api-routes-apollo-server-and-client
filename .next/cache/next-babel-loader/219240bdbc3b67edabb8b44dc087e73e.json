{"ast":null,"code":"// Hold all endpoints data here\nimport { createHttpLink } from \"apollo-link-http\"; // import fetch from \"node-fetch\";\n\nconst GITHUB_BASE_API = \"https://api.github.com\";\nexport const resolvers = {\n  Query: {\n    viewer(_parent, _args, _context, _info) {\n      return {\n        id: 1,\n        name: \"John Smith 2\",\n        status: \"\"\n      };\n    },\n\n    git_user: async (parent, args, context, info) => {\n      console.log(\"git_user args => \", args.id); // let github_user = _args.id;\n\n      let {\n        id\n      } = args;\n      return createHttpLink(`${GITHUB_BASE_API}/users/${id}`).then(res => res.json()).then(git_data => {\n        console.log(\"git_data => \", git_data);\n\n        if (git_data.id) {\n          return {\n            id: git_data.id,\n            name: git_data.login,\n            html_url: git_data.html_url,\n            status: \"wip\"\n          };\n        } else {\n          return {\n            id: 404,\n            name: git_data.message,\n            html_url: \"\",\n            status: git_data.message\n          };\n        }\n      }).catch(err => {\n        return {\n          id: 404,\n          name: err.message,\n          html_url: \"\",\n          status: err.message\n        };\n      });\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/lukes/Documents/Github/next.js-api-routes-apollo-server-and-client/apollo/resolvers.js"],"names":["createHttpLink","GITHUB_BASE_API","resolvers","Query","viewer","_parent","_args","_context","_info","id","name","status","git_user","parent","args","context","info","console","log","then","res","json","git_data","login","html_url","message","catch","err"],"mappings":"AAAA;AACA,SAASA,cAAT,QAA+B,kBAA/B,C,CACA;;AACA,MAAMC,eAAe,GAAG,wBAAxB;AAEA,OAAO,MAAMC,SAAS,GAAG;AACvBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,CAACC,OAAD,EAAUC,KAAV,EAAiBC,QAAjB,EAA2BC,KAA3B,EAAkC;AACtC,aAAO;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,IAAI,EAAE,cAAf;AAA+BC,QAAAA,MAAM,EAAE;AAAvC,OAAP;AACD,KAHI;;AAILC,IAAAA,QAAQ,EAAE,OAAOC,MAAP,EAAeC,IAAf,EAAqBC,OAArB,EAA8BC,IAA9B,KAAuC;AAC/CC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCJ,IAAI,CAACL,EAAtC,EAD+C,CAE/C;;AACA,UAAI;AAAEA,QAAAA;AAAF,UAASK,IAAb;AAEA,aAAOd,cAAc,CAAE,GAAEC,eAAgB,UAASQ,EAAG,EAAhC,CAAd,CACJU,IADI,CACCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADR,EAEJF,IAFI,CAECG,QAAQ,IAAI;AAChBL,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BI,QAA5B;;AACA,YAAIA,QAAQ,CAACb,EAAb,EAAiB;AACf,iBAAO;AACLA,YAAAA,EAAE,EAAEa,QAAQ,CAACb,EADR;AAELC,YAAAA,IAAI,EAAEY,QAAQ,CAACC,KAFV;AAGLC,YAAAA,QAAQ,EAAEF,QAAQ,CAACE,QAHd;AAILb,YAAAA,MAAM,EAAE;AAJH,WAAP;AAMD,SAPD,MAOO;AACL,iBAAO;AACLF,YAAAA,EAAE,EAAE,GADC;AAELC,YAAAA,IAAI,EAAEY,QAAQ,CAACG,OAFV;AAGLD,YAAAA,QAAQ,EAAE,EAHL;AAILb,YAAAA,MAAM,EAAEW,QAAQ,CAACG;AAJZ,WAAP;AAMD;AACF,OAnBI,EAoBJC,KApBI,CAoBEC,GAAG,IAAI;AACZ,eAAO;AACLlB,UAAAA,EAAE,EAAE,GADC;AAELC,UAAAA,IAAI,EAAEiB,GAAG,CAACF,OAFL;AAGLD,UAAAA,QAAQ,EAAE,EAHL;AAILb,UAAAA,MAAM,EAAEgB,GAAG,CAACF;AAJP,SAAP;AAMD,OA3BI,CAAP;AA4BD;AArCI;AADgB,CAAlB","sourcesContent":["// Hold all endpoints data here\nimport { createHttpLink } from \"apollo-link-http\";\n// import fetch from \"node-fetch\";\nconst GITHUB_BASE_API = \"https://api.github.com\";\n\nexport const resolvers = {\n  Query: {\n    viewer(_parent, _args, _context, _info) {\n      return { id: 1, name: \"John Smith 2\", status: \"\" };\n    },\n    git_user: async (parent, args, context, info) => {\n      console.log(\"git_user args => \", args.id);\n      // let github_user = _args.id;\n      let { id } = args;\n\n      return createHttpLink(`${GITHUB_BASE_API}/users/${id}`)\n        .then(res => res.json())\n        .then(git_data => {\n          console.log(\"git_data => \", git_data);\n          if (git_data.id) {\n            return {\n              id: git_data.id,\n              name: git_data.login,\n              html_url: git_data.html_url,\n              status: \"wip\"\n            };\n          } else {\n            return {\n              id: 404,\n              name: git_data.message,\n              html_url: \"\",\n              status: git_data.message\n            };\n          }\n        })\n        .catch(err => {\n          return {\n            id: 404,\n            name: err.message,\n            html_url: \"\",\n            status: err.message\n          };\n        });\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}